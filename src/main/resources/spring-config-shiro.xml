<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!-- 缓存管理器 -->
    <bean id="cacheManager" class="cn.yc.ssh.admin.spring.SpringCacheManagerWrapper">
        <property name="cacheManager" ref="springCacheManager"/>
    </bean>

    <!-- 凭证匹配器 -->
    <!-- <bean id="credentialsMatcher" class="cn.yc.ssh.admin.credentials.CustomCredentialsMatcher">
    </bean> -->
    <bean id="credentialsMatcher" class="cn.yc.ssh.admin.credentials.RetryLimitHashedCredentialsMatcher">
        <constructor-arg ref="cacheManager"/>
        <property name="hashAlgorithmName" value="md5"/>
        <property name="hashIterations" value="2"/>
        <property name="storedCredentialsHexEncoded" value="true"/> 
    </bean>

    <!-- Realm实现 -->
    <bean id="userRealm" class="cn.yc.ssh.admin.base.realm.UserRealm">
        <constructor-arg ref="cacheManager"/>
        <property name="credentialsMatcher" ref="credentialsMatcher"/>
        <property name="cachingEnabled" value="false"/>
        <!--<property name="authenticationCachingEnabled" value="true"/>-->
        <!--<property name="authenticationCacheName" value="authenticationCache"/>-->
        <!--<property name="authorizationCachingEnabled" value="true"/>-->
        <!--<property name="authorizationCacheName" value="authorizationCache"/>-->
    </bean>

    <!-- 会话ID生成器 -->
    <bean id="sessionIdGenerator" class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator"/>

    <!-- 会话Cookie模板 -->
    <bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
        <constructor-arg value="sid"/>
        <property name="httpOnly" value="true"/>
        <property name="maxAge" value="-1"/>
    </bean>

    <bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
        <constructor-arg value="rememberMe"/>
        <property name="httpOnly" value="true"/>
        <property name="maxAge" value="2592000"/><!-- 30天 -->
    </bean>

    <!-- rememberMe管理器 -->
    <bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">
        <!-- rememberMe cookie加密的密钥 建议每个项目都不一样 默认AES算法 密钥长度（128 256 512 位）-->
        <property name="cipherKey"
                  value="#{T(org.apache.shiro.codec.Base64).decode('4AvVhmFLUs0KTA3Kprsdag==')}"/>
        <property name="cookie" ref="rememberMeCookie"/>
    </bean>

    <!-- 会话DAO -->
    <bean id="sessionDAO" class="org.apache.shiro.session.mgt.eis.MemorySessionDAO">
        <!-- <property name="activeSessionsCacheName" value="shiro-activeSessionCache"/>
        <property name="sessionIdGenerator" ref="sessionIdGenerator"/> -->
    </bean>

    <!-- 会话验证调度器 -->
    <bean id="sessionValidationScheduler" class="org.apache.shiro.session.mgt.quartz.QuartzSessionValidationScheduler">
        <property name="sessionValidationInterval" value="1800000"/>
        <property name="sessionManager" ref="sessionManager"/>
    </bean>
    
    <bean id="kickoutSessionControlFilter" class="cn.yc.ssh.admin.base.web.shiro.filter.KickoutSessionControlFilter">  
	    <property name="cacheManager" ref="cacheManager"/>  
	    <property name="sessionManager" ref="sessionManager"/>  
	  
	    <property name="kickoutAfter" value="false"/>  
	    <property name="maxSession" value="1"/> 
	    <property name="kickoutUrl" value="/login?kickout=1"/>  
	</bean>   
    <bean id="maxOnlineUserFilter" class="cn.yc.ssh.admin.base.web.shiro.filter.MaxOnlineUserFilter">  
	    <property name="maxonlineUrl" value="/login?maxonline=1"/>  
        <property name="sessionDAO" ref="sessionDAO"/>
	</bean>

    <!-- 会话管理器 替代ServletContainerSessionManager，自己维护会话，直接废弃了Servlet容器的会话管理。 -->
    <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
        <property name="globalSessionTimeout" value="1800000"/>
        <property name="deleteInvalidSessions" value="true"/>
        <property name="sessionValidationSchedulerEnabled" value="true"/>
        <property name="sessionValidationScheduler" ref="sessionValidationScheduler"/>
        <property name="sessionDAO" ref="sessionDAO"/>
        <property name="sessionIdCookieEnabled" value="true"/>
        <property name="sessionIdCookie" ref="sessionIdCookie"/>
    </bean>

    <!-- 安全管理器 -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="realm" ref="userRealm"/>
        <property name="sessionManager" ref="sessionManager"/>
        <property name="cacheManager" ref="cacheManager"/>
        <property name="rememberMeManager" ref="rememberMeManager"/>
    </bean>

    <!-- 相当于调用SecurityUtils.setSecurityManager(securityManager) -->
    <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="staticMethod" value="org.apache.shiro.SecurityUtils.setSecurityManager"/>
        <property name="arguments" ref="securityManager"/>
    </bean>

    <!-- 基于Form表单的身份验证过滤器 -->
    <!-- <bean id="loginFilter" class="cn.yc.ssh.admin.base.web.shiro.filter.LoginFilter">
        <property name="usernameParam" value="username"/>
        <property name="passwordParam" value="password"/>
        <property name="rememberMeParam" value="rememberMe"/>
        <property name="loginUrl" value="/login"/>
        <property name="successUrl" value="/index"></property>
    </bean> -->
    
    <bean id="authcFilter" class="cn.yc.ssh.admin.base.web.jcaptcha.MyFormAuthenticationFilter">  
	    <property name="usernameParam" value="username"/>  
	    <property name="passwordParam" value="password"/>  
	    <property name="rememberMeParam" value="rememberMe"/>  
	    <property name="failureKeyAttribute" value="shiroLoginFailure"/>  
        <property name="loginUrl" value="/login"/>
        <property name="successUrl" value="/index"></property>
	</bean>  
	<bean id="jCaptchaValidateFilter"   
	  class="cn.yc.ssh.admin.base.web.jcaptcha.JCaptchaValidateFilter">  
        <constructor-arg ref="cacheManager"/>
	    <property name="jcaptchaEbabled" value="true"/>  
	    <property name="jcaptchaParam" value="jcaptchaCode"/>  
	    <property name="failureKeyAttribute" value="shiroLoginFailure"/>  
	</bean> 

	<bean id="logoutFilter" class="cn.yc.ssh.admin.base.web.shiro.filter.LogoutFilter"></bean>
    <bean id="sysUserFilter" class="cn.yc.ssh.admin.base.web.shiro.filter.SysUserFilter"/>
    <bean id="forceLogoutFilter" class="cn.yc.ssh.admin.base.web.shiro.filter.ForceLogoutFilter"/>

    <!-- Shiro的Web过滤器 -->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager"/>
        <property name="loginUrl" value="/login"/>
        <property name="successUrl" value="/index"></property>
        <property name="filters">
            <util:map>
                <entry key="authc" value-ref="authcFilter"/>
                <entry key="logout" value-ref="logoutFilter"/>
                <entry key="sysUser" value-ref="sysUserFilter"/>
                <entry key="forceLogout" value-ref="forceLogoutFilter"/>
                <entry key="kickout" value-ref="kickoutSessionControlFilter"/>
                <entry key="maxOnline" value-ref="maxOnlineUserFilter"/>
           		 <entry key="jCaptchaValidate" value-ref="jCaptchaValidateFilter"/> 
            </util:map>
        </property>
        <property name="filterChainDefinitions">
            <value>
                /login = jCaptchaValidate,authc
                /static/**=anon
                /login/aes=anon
                /jcaptcha.jpg=anon
                /logout = logout
                /authenticated = authc
                /** = authc,forceLogout,user,sysUser,kickout,maxOnline
            </value>
        </property>
    </bean>

    <!-- Shiro生命周期处理器-->
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>

</beans>